<?php
namespace {{ namespace }}\FormHandler;
{% block use_statements %}
use Mbx\ArchitectBundle\Abstracts\AbstractFormHandler;
use Mbx\ArchitectBundle\Interfaces\EntityInterface;
use {{ namespace }}\Form\{{ entity_class }}Type;
{% endblock use_statements %}

{% block class_definition %}
/**
 * Generated by MbxArchitectBundle
 */
class {{ entity_class }}FormHandler extends AbstractFormHandler
{% endblock class_definition %}
{
{% block class_body %}

    /**
     * Returns the route name of delete action
     *
     * @return string
     */
    public function initDeleteRouteName()
    {
       return '{{ entity_class|lower }}_delete';
    }
    /**
     * Returns the FormType's namespace of the managed entity
     *
     * @return string
     */
    public function initFormTypeNS()
    {
        return {{ entity_class }}Type::class;
    }
    /**
     * Code to execute before checking if form is submitted and valid
     *
     * @param \Mbx\ArchitectBundle\Interfaces\EntityInterface $entity
     * @return array
     */
    public function beforeCheckForm(EntityInterface $entity)
    {
        // TODO: Implement beforeCheckForm() method.
        return compact(array());
    }
    /**
     * Code to execute after checking if form is submitted and valid
     *
     * @param \Mbx\ArchitectBundle\Interfaces\EntityInterface $entity
     * @param array $extraVars
     * @return mixed
     */
    public function afterCheckForm(EntityInterface $entity, $extraVars = array())
    {
        // TODO: Implement afterCheckForm() method.
        // extract($extraVars);
    }
    /**
     * Code to execute before checking if delete form is submitted and valid
     *
     * @param \Mbx\ArchitectBundle\Interfaces\EntityInterface $entity
     * @return mixed
     */
    public function beforeCheckDeleteForm(EntityInterface $entity)
    {
        // TODO: Implement beforeCheckDeleteForm() method.
        return compact(array());
    }
    /**
     * Code to execute after checking if delete form is submitted and valid
     *
     * @param \Mbx\ArchitectBundle\Interfaces\EntityInterface $entity
     * @param array $extraVars
     * @return mixed
     */
    public function afterCheckDeleteForm(EntityInterface $entity, $extraVars = array())
    {
        // TODO: Implement afterCheckDeleteForm() method.
        // extract($extraVars);
    }
{% endblock class_body %}
}