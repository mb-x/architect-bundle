<?php
namespace {{ namespace }}\Manager;
{% block use_statements %}
use Mbx\ArchitectBundle\Abstracts\AbstractEntityManager;
use Mbx\ArchitectBundle\Interfaces\EntityInterface;
use {{ namespace }}\Entity\{{ entity_class }};
{% endblock use_statements %}

{% block class_definition %}
/**
 * Generated by MbxArchitectBundle
 */
class {{ entity_class }}Manager extends AbstractEntityManager
{% endblock class_definition %}
{
{% block class_body %}
    public function initRepositoryNS()
    {
        return {{ entity_class }}::class;
    }

    public function beforeSave(EntityInterface $entity)
    {
        // TODO: Implement beforeSave() method.
    }

    public function afterSave(EntityInterface $entity)
    {
        // TODO: Implement afterSave() method.
    }

    public function beforeRemove(EntityInterface $entity)
    {
        // TODO: Implement beforeRemove() method.
    }

    public function afterRemove(EntityInterface $entity)
    {
        // TODO: Implement afterRemove() method.
    }
{% endblock class_body %}
}